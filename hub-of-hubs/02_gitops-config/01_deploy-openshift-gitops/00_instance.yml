---
kind: ArgoCD
apiVersion: argoproj.io/v1alpha1
metadata:
  name: openshift-gitops
  namespace: openshift-gitops
spec:
  controller:
    processors: {}
    resources:
      limits:
        cpu: 2000m
        memory: 2048Mi
      requests:
        cpu: 250m
        memory: 1024Mi
    sharding: {}
  dex:
    openShiftOAuth: true
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  ha:
    enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  redis:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  repo:
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 256Mi
  server:
    autoscale:
      enabled: false
    grpc:
      ingress:
        enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 125m
        memory: 128Mi
    insecure: true
    replicas: 1
    route:
      enabled: true
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
    #service:
    #  type: ''
  grafana:
    enabled: false
    size: 1
    ingress:
      enabled: false
    route:
      enabled: false
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
  tls:
    ca: {}
  prometheus:
    enabled: false
    ingress:
      enabled: false
    route:
      enabled: false
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
  initialSSHKnownHosts: {}
  applicationSet:
    resources:
      limits:
        cpu: '2'
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi
  rbac:
    #defaultPolicy: 'role:readonly'
    defaultPolicy: 'role:admin'
    policy: |
      g, cluster-admins, role:admin
      g, admins, role:admin
    scopes: '[groups]'
  resourceExclusions: |
    - apiGroups:
      - internal.open-cluster-management.io
      kinds:
      - ManagedClusterInfo
      clusters:
      - "*"
    - apiGroups:
      - tekton.dev
      clusters:
      - '*'
      kinds:
      - TaskRun
      - PipelineRun
  nodePlacement:
    tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/infra
        operator: Exists
      - effect: NoExecute
        key: node-role.kubernetes.io/infra
        operator: Exists
  kustomizeBuildOptions: '--enable-helm --helm-command "/usr/local/bin/helm --insecure-skip-tls-verify"'
  kustomizeVersions:
    # you can get the updated version by running the `kustomize version` command in the argocd-server pod
    # or from https://docs.openshift.com/container-platform/4.12/cicd/gitops/gitops-release-notes.html
    - path: /usr/local/bin/kustomize
      version: v4.4.1
  resourceCustomizations: |
    argoproj.io/Application:
      health.lua: |
        hs = {}
        hs.status = "Progressing"
        hs.message = ""
        if obj.status ~= nil then
          if obj.status.health ~= nil then
            hs.status = obj.status.health.status
            hs.message = obj.status.health.message
          end
        end
        return hs

